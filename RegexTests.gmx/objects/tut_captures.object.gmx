<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Non JSON
var regex = regex_create("((a(b))c)+", RO_NONE, 3000);
var input = "abcabcabc";

var match = regex_match(regex, input);
if(match != -1) {
    show_debug_message("Match: '" + match_get_value(match) + "' at position " + string(match_get_index(match)));
    var group_count = match_get_group_count(match);
    for(var g = 0; g &lt; group_count; g++) {
        var group = match_get_group_by_index(match, g);
        
        show_debug_message("    Group " + 
                            string(g) + 
                            ": '" + 
                            group_get_value(group) + 
                            "' at position " + 
                            string(group_get_index(group)));
        
        var capture_count = group_get_capture_count(group);
        for(var c = 0; c &lt; capture_count; c++) {
            var capture = group_get_capture(group, c);
            show_debug_message("        Capture " +
                               string(c) +
                               ": '" +
                               capture_get_value(capture) +
                               "' at position " +
                               string(capture_get_index(capture)));
                               
            regex_destroy_id(capture);
        }
        regex_destroy_id(group);
    }
    regex_destroy_id(match);
}

regex_destroy_id(regex);

//USING JSON

regex = regex_create("(\b(\w+?)[,:;]?\s?)+[?.!]", RO_COMPILED, 3000);
input = "This is one sentence. This is a second sentence.";

var json = regex_matches_json(regex, input, JO_CAPTURES);
var map = json_decode(json);
var matches = map[? "default"];
for(var m = 0; m &lt; ds_list_size(matches); m++) 
{
    var match = matches[| m];
    show_debug_message("Match " + string(m) + ": " + match[? "value"]);
    
    var groups = match[? "groups"];
    for(var g = 0; g &lt; ds_list_size(groups); g++) 
    {
        var group = groups[| g];
        show_debug_message("    Group " + string(g) + ": " + group[? "value"]);
        
        var captures = group[? "captures"];
        for(var c = 0; c &lt; ds_list_size(captures); c++) 
        {
            var capture = captures[| c];
            show_debug_message("        Capture " + string(c) + ": " + capture[? "value"]);
        }
    }
}

ds_map_destroy(map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
