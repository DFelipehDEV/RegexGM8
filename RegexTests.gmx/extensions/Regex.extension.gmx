<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Regex</name>
  <version>1.0.0</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>02/10/17</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>105553658380352</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources>
    <Resource>Scripts\regex_string_split</Resource>
  </IncludedResources>
  <files>
    <file>
      <filename>RegexGM.dll</filename>
      <origname>extensions\RegexGM.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>regex_create</name>
          <externalName>RegexCreate</externalName>
          <kind>12</kind>
          <help>regex_create(pattern, regex_options, timeout)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_destroy_id</name>
          <externalName>DestroyId</externalName>
          <kind>12</kind>
          <help>regex_destroy_id(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_destroy_all</name>
          <externalName>DestroyAll</externalName>
          <kind>12</kind>
          <help>regex_destroy_all()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>regex_matches_json</name>
          <externalName>MatchesJson</externalName>
          <kind>12</kind>
          <help>regex_matches_json(regex_id, input, json_options)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_matches_from_json</name>
          <externalName>MatchesFromJson</externalName>
          <kind>12</kind>
          <help>regex_matches_from_json(regex_id, input, start_at, json_options)</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_is_match</name>
          <externalName>IsMatch</externalName>
          <kind>12</kind>
          <help>regex_is_match(regex_id, input)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_is_match_from</name>
          <externalName>IsMatchFrom</externalName>
          <kind>12</kind>
          <help>regex_is_match_from(regex_id, input, start_at)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_match</name>
          <externalName>Match</externalName>
          <kind>12</kind>
          <help>regex_match(regex_id, input)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_match_json</name>
          <externalName>MatchJson</externalName>
          <kind>12</kind>
          <help>regex_match_json(regex_id, input, json_options)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_match_from</name>
          <externalName>MatchFrom</externalName>
          <kind>12</kind>
          <help>regex_match_from(regex_id, input, start_at)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_match_from_json</name>
          <externalName>MatchFromJson</externalName>
          <kind>12</kind>
          <help>regex_match_from_json(regex_id, input, start_at, json_option)</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_next_match</name>
          <externalName>MatchGetNextMatch</externalName>
          <kind>12</kind>
          <help>match_get_next_match(match_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_index</name>
          <externalName>MatchGetIndex</externalName>
          <kind>12</kind>
          <help>match_get_index(match_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_length</name>
          <externalName>MatchGetLength</externalName>
          <kind>12</kind>
          <help>match_get_length(match_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_value</name>
          <externalName>MatchGetValue</externalName>
          <kind>12</kind>
          <help>match_get_value(match_id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_groups_json</name>
          <externalName>MatchGetGroupsJson</externalName>
          <kind>12</kind>
          <help>match_get_groups_json(match_id, json_options)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_group_by_name</name>
          <externalName>MatchGetGroupByName</externalName>
          <kind>12</kind>
          <help>match_get_group_by_name(match_id, group_name)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>match_get_group_by_name_json</name>
          <externalName>MatchGetGroupByNameJson</externalName>
          <kind>12</kind>
          <help>match_get_group_by_name_json(match_id, group_name, json_options)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_group_by_index</name>
          <externalName>MatchGetGroupByIndex</externalName>
          <kind>12</kind>
          <help>match_get_group_by_index(match_id, group_index)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_group_by_index_json</name>
          <externalName>MatchGetGroupByIndexJson</externalName>
          <kind>12</kind>
          <help>match_get_group_by_index_json(match_id, group_index, json_options)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_group_count</name>
          <externalName>MatchGetGroupCount</externalName>
          <kind>12</kind>
          <help>match_get_group_count(match_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_index</name>
          <externalName>GroupGetIndex</externalName>
          <kind>12</kind>
          <help>group_get_index(group_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_length</name>
          <externalName>GroupGetLength</externalName>
          <kind>12</kind>
          <help>group_get_length(group_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_name</name>
          <externalName>GroupGetName</externalName>
          <kind>12</kind>
          <help>group_get_name(group_id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_success</name>
          <externalName>GroupGetSuccess</externalName>
          <kind>12</kind>
          <help>group_get_success(group_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_value</name>
          <externalName>GroupGetValue</externalName>
          <kind>12</kind>
          <help>group_get_value(group_id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_captures_json</name>
          <externalName>GroupGetCapturesJson</externalName>
          <kind>12</kind>
          <help>group_get_captures_json(group_id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_capture_count</name>
          <externalName>GroupGetCaptureCount</externalName>
          <kind>12</kind>
          <help>group_get_capture_count(group_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_capture</name>
          <externalName>GroupGetCapture</externalName>
          <kind>12</kind>
          <help>group_get_capture(group_id, capture_index)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>group_get_capture_json</name>
          <externalName>GroupGetCaptureJson</externalName>
          <kind>12</kind>
          <help>group_get_capture_json(group_id, capture_index)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>capture_get_index</name>
          <externalName>CaptureGetIndex</externalName>
          <kind>12</kind>
          <help>capture_get_index(capture_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>capture_get_length</name>
          <externalName>CaptureGetLength</externalName>
          <kind>12</kind>
          <help>capture_get_length(capture_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>capture_get_value</name>
          <externalName>CaptureGetValue</externalName>
          <kind>12</kind>
          <help>capture_get_value(capture_id)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_replace</name>
          <externalName>Replace</externalName>
          <kind>12</kind>
          <help>regex_replace(regex_id, input, replacement)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_replace_count</name>
          <externalName>ReplaceNumber</externalName>
          <kind>12</kind>
          <help>regex_replace_count(regex_id, input, replacement, count)</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_replace_from</name>
          <externalName>ReplaceFrom</externalName>
          <kind>12</kind>
          <help>regex_replace_from(regex_id, input, replacement, start_at)</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_regex_split</name>
          <externalName>Split</externalName>
          <kind>12</kind>
          <help>_regex_split(regex_id, input)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_split_json</name>
          <externalName>SplitJson</externalName>
          <kind>12</kind>
          <help>regex_split_json(regex_id, input)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_regex_split_count</name>
          <externalName>SplitCount</externalName>
          <kind>12</kind>
          <help>_regex_split_count(regex_id, input, count)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_split_count_json</name>
          <externalName>SplitCountJson</externalName>
          <kind>12</kind>
          <help>regex_split_count_json(regex_id, input, count)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_regex_split_from</name>
          <externalName>SplitFrom</externalName>
          <kind>12</kind>
          <help>_regex_split_from(regex_id, input, start_at)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>regex_split_from_json</name>
          <externalName>SplitFromJson</externalName>
          <kind>12</kind>
          <help>regex_split_from_json(regex_id, input, start_at)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_split_get_size</name>
          <externalName>SplitGetSize</externalName>
          <kind>12</kind>
          <help>_split_get_size(split_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_split_get_count</name>
          <externalName>SplitGetCount</externalName>
          <kind>12</kind>
          <help>_split_get_count(split_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_split_fill_buffer</name>
          <externalName>SplitFillBuffer</externalName>
          <kind>12</kind>
          <help>_split_fill_buffer(split_id, buffer_address)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_get_cache_size</name>
          <externalName>RegexGetCacheSize</externalName>
          <kind>12</kind>
          <help>regex_get_cache_size()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>regex_set_cache_size</name>
          <externalName>RegexSetCacheSize</externalName>
          <kind>12</kind>
          <help>regex_set_cache_size(size)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_split_get_index</name>
          <externalName>SplitGetIndex</externalName>
          <kind>12</kind>
          <help>_split_get_index(split_id, index)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>match_get_result</name>
          <externalName>MatchGetResult</externalName>
          <kind>12</kind>
          <help>match_get_result(match_id, format)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_matches</name>
          <externalName>Matches</externalName>
          <kind>12</kind>
          <help>regex_matches(regex_id, input)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>regex_matches_from</name>
          <externalName>MatchesFrom</externalName>
          <kind>12</kind>
          <help>regex_matches_from(regex_id, input, start_at)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>matches_get_count</name>
          <externalName>MatchesGetCount</externalName>
          <kind>12</kind>
          <help>matches_get_count(matches_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>matches_get_match</name>
          <externalName>MatchesGetMatch</externalName>
          <kind>12</kind>
          <help>matches_get_match(matches_id, index)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_regex_split_from_count</name>
          <externalName>SplitFromCount</externalName>
          <kind>12</kind>
          <help>_regex_split_from_count(regex_id, input, count, start_at)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants>
        <constant>
          <name>RO_NONE</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_IGNORE_CASE</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_MULTILINE</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_EXPLICIT_CAPTURE</name>
          <value>4</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_COMPILED</name>
          <value>8</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_SINGLELINE</name>
          <value>16</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_IGNORE_PATTERN_WHITESPACE</name>
          <value>32</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_RIGHT_TO_LEFT</name>
          <value>64</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_ECMA_SCRIPT</name>
          <value>256</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>RO_CULTURE_INVARIANT</name>
          <value>512</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>JO_NONE</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>JO_GROUPS</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>JO_CAPTURES</name>
          <value>3</value>
          <hidden>0</hidden>
        </constant>
      </constants>
    </file>
  </files>
</extension>
